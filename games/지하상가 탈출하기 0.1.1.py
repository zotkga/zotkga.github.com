import sys
import random as r
import time

게임속도 = 0.6

#한글 조사 출력 함수 by 이음 (https://www.eeum.com/post/86)
def 종성(kstr):
    k = kstr[-1]
    if "가" <= k <= "힣":
        return (ord(k)-ord("가")) % 28 > 0
    else:
        return
def 을(kstr):
    조사 = "을" if 종성(kstr) else "를"
    return f"{kstr}{조사}"
def 이(kstr):
    조사 = "이" if 종성(kstr) else "가"
    return f"{kstr}{조사}"
def 와(kstr):
    조사 = "과" if 종성(kstr) else "와"
    return f"{kstr}{조사}"
def 은(kstr):
    조사 = "은" if 종성(kstr) else "는"
    return f"{kstr}{조사}"

def p(*args):
    time.sleep(게임속도)
    print(*args, end='')

# 메시지 데이터

선택에러메시지 = "잘못된 번호입니다.\n\n"

탐색메시지 = ["지하상가를 돌아다니던 중", "경사로를 따라 내려가던 중", "상가 사이를 지나치던 중", "표지판을 보며 헤메던 중", "다리가 아파올 때 쯤"]
몹조우메시지 = ["나타났다!", "시비를 걸었다!", "습격했다!", "앞길을 막았다!"]
스킬준비메시지 = ["쓰려고 한다.", "준비하고 있다.", "사용할 것 같다.", "사용할 예정이다.", "준비 중이다."]
공격메시지 = ["공격했다!", "가격했다!", "한 방 먹였다!"]
데미지메시지 = ["데미지를 입혔다!", "데미지를 주었다!"]
방어메시지 = ["가드를 올렸다!", "방어 태세를 취했다!", "다음 공격에 대비한다!"]
방어성공메시지 = ["하지만 버텨냈다.", "하지만 방어했다!", "공격은 소용 없었다!", "방어에 성공했다!"]
승리메시지 = ["때려눕혔다!", "물리쳤다!", "기절시켰다!", "무찔렀다!", "쓰러뜨렸다!", "빈사 상태로 만들었다!"]
골드획득메시지 = ["획득했다!", "갈취했다!", "빼앗았다!", "주웠다!", "받았다!"]
사망메시지 = ["쓰러졌다...", "기절했다....", "탈출에 실패했다..."]
사용메시지 = ["사용했다!", "썼다!", ""]
상점발견메시지 = ["열려있는 상가를 발견했다!", "영업 중인 가게를 발견했다!", "물건을 파는 곳을 발견했다!", "물건이 남아있는 자판기를 발견했다!"]

제작자정보메시지 = """

제작: 계산고등학교 20203 김도현 (2024)


"""

게임설명메시지 = """
당신은 부평역 지하상가 깊숙한 곳에 조난 당했습니다.
현재 위치는 1번 출구, 당신은 열려있는 출구인 31번 출구까지 가야 합니다.

HP가 0이 되면 게임 오버!
목적지에 도달하면 승리!

행운을 빕니다!


"""

타이틀메시지 = """

░█▄▄▄█░▀█▀█▀█░▄▀▀▄▀█░░░░▀░░░░░▀░░░░░▀░░░░░▀░░░░
░█▄▄▄█░▄█▄█▀█░▀▄▄▀▀█░░▀█▀░█░▄█▄░█░▄▀▄░█▄▀▀█░█░░
░▄▄▄▄▄░░░░▄▄░░░░░▄▄▄░░▄▀▄░█░▄▀▄░█▄▀░█▄▀░░░█░█▄░
░░░█░░░░░▀▄▄▀░░░░░░█░░█░█░█░▀▄▀░█░░▀▄▄▀░░░█░█░░
░░░░░░░░▄▄▄▄░▄░░░▄▄██▄▄░░░▄▄░░▄░░░░░░░▄░░░░░░░░
░░░░▄░░░█▀▀░░█▄░░░▄▀▀▄░░░▀▀▀▀░█░░▀▀▀█░█░░░░░░░░
░░░▀█▀░░▀▀▀▀░▀░░░▀▀▀█▀▀░░▄▀▀▄░█░░░░░█░█░░░░░░░░
░░▀░░▄░░░░▀▀██░░░░▀▀██░░░█░░█░█▀░░░░█░█░░░░░░░░
░░░░░░░░░░▀█▄▄░░░░▀█▄▄░░░░▀▀░░█░░░░░▀░█░(0.1.1)

"""

게임시작메시지 = ["\n때는 2124년.", "  당신은 조난당했다.\n", "마계라고 불리우는 인천의 가장 복잡한 장소,", "  부 평 역  지 하 상 가 ...\n\n", "과연 당신은 이 지하상가를 탈출할 수 있을까...", "\n\n"]
엔딩메시지 = ["출구에 도착했다!\n\n", ". ", ". ", ". ", ". ", ". ", ". \n\n", "그리하여 당신은 부평역 지하상가를 탈출하게 되었다.\n\n", "정말 고달프고 힘든 여정이었다.\n\n", "잠깐만. " , ". ", ". ", "여기 원래 2층이 있었나...?\n\n", "THE END.\n\n"]
# 플레이어
class 플레이어:
    def __init__(self, 이름):
        
        self.이름 = 이름
        self.최대hp = 100
        self.hp = 100
        self.골드 = 0
        self.인벤토리 = []
        self.최소공격력 = 5
        self.최대공격력 = 20
        self.전투가중치 = 0

    def 공격(self, 몹):

        데미지 = r.randint(self.최소공격력, self.최대공격력)
        몹.hp -= 데미지

        p(f"  {이(self.이름)} {을(몹.이름)} {r.choice(공격메시지)}\n")
        p(f"  {데미지} {r.choice(데미지메시지)}\n\n")

    def 방어(self):
        p(f"  {이(self.이름)} {r.choice(방어메시지)}\n\n")
    

    def 아이템_사용(self, 아이템):

        if 아이템 in self.인벤토리:
            self.hp += 아이템.회복량
            self.인벤토리.remove(아이템)
            p(f"  {이(self.이름)} {을(아이템.이름)} {r.choice(사용메시지)} (HP +{아이템.회복량})\n\n")

        else:
            p(f"  {이(아이템.이름)} 인벤토리에 없다.\n\n")

# 몹
class 몹:
    def __init__(self, 이름, hp, 골드, 스킬들):

        self.이름 = 이름
        self.최대hp = hp
        self.hp = hp
        self.스킬들 = 스킬들
        self.골드 = 골드

    def 스킬_사용(self, 플레이어, 스킬):

        데미지 = r.randint(스킬['최소_데미지'], 스킬['최대_데미지'])
        플레이어.hp -= 데미지

        p(f"  {self.이름}의 {스킬['이름']}!\n")
        p(f"  {r.choice(스킬['설명'])}  (HP -{데미지})\n\n")

# 몹 데이터

깡패 = 몹(
    "깡패", 
    80, 4000,
    [
        {
        '이름': '주먹질', 
        '최소_데미지': 5, '최대_데미지': 15, 
        '설명': ["윽, 아프다!", "얼굴을 맞았다!", "아야!"]
        },
        {
        '이름': '방망이질', 
        '최소_데미지': 15, '최대_데미지': 35, 
        '설명': ["으악, 제대로 맞았다!", "복부를 가격당했다!", "크헉!"]
        },
        {
        '이름': '협박', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["기가 죽었다...", "너무 무섭다...", "눈물이 찔끔 나왔다..."]
        }
    ]
)

잼민이 = 몹(
    "잼민이",
    30, 1000,
    [
        {
        '이름': '부모님 소환', 
        '최소_데미지': 50, '최대_데미지': 50, 
        '설명': ["세명이 동시에 달려든다!", "으악! 그 자식에 그 부모로군...", "세명이 덤비니 손쓸 수 없다..."]
        },
        {
        '이름': '깨물기', 
        '최소_데미지': 5, '최대_데미지': 10, 
        '설명': ["앗 따거!", "다리를 물렸다!", "아야야!"]
        },
        {
        '이름': '소리 지르기', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["시끄러워 죽겠네!", "아이고 귀야!", "귀청 떨어지겠다!"]
        }
    ]
)

일진 = 몹(
    "일진", 
    60, 3000,
    [
        {
        '이름': '침뱉기', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["으... 더러워 죽겠네.", "으... 얼굴에 맞았다.", "으... 신발에 튀었다."]
        },
        {
        '이름': '부하들 소환', 
        '최소_데미지': 20, '최대_데미지': 50, 
        '설명': ["집단으로 때린다!", "여러명이 달려든다!", "아픈 곳만 골라 때린다!"]
        },
        {
        '이름': '죽빵', 
        '최소_데미지': 10, '최대_데미지': 10, 
        '설명': ["코피를 흘렸다!", "얼굴 한쪽이 얼얼하다!", "안경을 안 써서 다행이다..."]
        }
    ]
)

할머니 = 몹(
    "할머니", 
    50, 6000,
    [
        {
        '이름': '틀니 공격', 
        '최소_데미지': 5, '최대_데미지': 15, 
        '설명': ["아야! 아야! 아야! 아야!", "딱딱딱딱딱딱딱딱!", "틀니에 날이 세워져 있다!"]
        },
        {
        '이름': '지팡이 공격', 
        '최소_데미지': 20, '최대_데미지': 30, 
        '설명': ["강철 지팡이다!", "악! 뼈맞았어!", "퍽 퍽 퍽!"]
        },
        {
        '이름': 'AK47', 
        '최소_데미지': 0, '최대_데미지': 100, 
        '설명': ["내가 사망하겠다!", "할머니한테 총이 왜 있는거야!", "탕!"]
        }
    ]
)

바가지상인 = 몹(
    "바가지상인", 
    10, 500,
    [
        {
        '이름': '중국산 휴대폰', 
        '최소_데미지': 30, '최대_데미지': 30, 
        '설명': ["휴대폰이 터졌다!", "휴대폰이 날카롭다!", "휴대폰이 아니라 벽돌이다!"]
        },
        {
        '이름': '중국산 식칼', 
        '최소_데미지': 30, '최대_데미지': 30, 
        '설명': ["중국산이라 무디다!", "중국산이라 치명상은 피했다!", "식칼이 아니라 벽돌이다!"]
        },
        {
        '이름': '중국산 구두', 
        '최소_데미지': 30, '최대_데미지': 30, 
        '설명': ["구두가 왜 터지는 거지?", "구두가 부메랑처럼 날아온다!", "구두가 아니라 벽돌이다!"]
        }
    ]
)

노숙자 = 몹(
    "노숙자", 
    10, 0,
    [
        {
        '이름': '소주병 던지기', 
        '최소_데미지': 50, '최대_데미지': 50, 
        '설명': ["소주병이 날아온다!", "먹던 병을 그대로 던진다!", "병이 깨지며 파편이 날린다!"]
        },
        {
        '이름': '구걸', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["돈을 달라고 한다...", "동정을 유발한다...", "기분이 나쁘다..."]
        },
        {
        '이름': '냄새', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["지독한 냄새가 난다!", "숨을 쉴 수가 없다!", "눈물이 난다!"]
        }
    ]
)

자전거배달원 = 몹(
    "자전거 배달원", 
    120, 7000,
    [
        {
        '이름': '자전거 돌진', 
        '최소_데미지': 30, '최대_데미지': 30, 
        '설명': ["자전거가 빠르게 돌진한다!", "자전거에 치였다!", "엄청 빠르다! 으악!"]
        },
        {
        '이름': '짜장면 던지기', 
        '최소_데미지': 20, '최대_데미지': 20, 
        '설명': ["짜장면이 날아온다!", "으악! 뜨거워!", "짜장면이 휘날린다!"]
        },
        {
        '이름': '따르릉', 
        '최소_데미지': 1, '최대_데미지': 1, 
        '설명': ["소리에 놀랐다!", "귀에 거슬린다!", "시끄럽다!"]
        }
    ]
)



몹리스트 = {"오렌지길": [깡패, 일진], "초록길": [잼민이, 노숙자], "빨강길": [할머니, 바가지상인, 자전거배달원]}


# 아이템
class 아이템:
    def __init__(self, 이름, 설명, 가격, 회복량):
        self.이름 = 이름
        self.설명 = 설명
        self.가격 = 가격
        self.회복량 = 회복량

# 아이템 데이터
껌 = 아이템("껌", "껌값이네. (HP + 10)", 500, 10)
초코바 = 아이템("초코바", "쓰디 쓴 다크 초콜릿으로 만들어졌다. (HP + 10)", 1000, 10)
아이스크림 = 아이템("아이스크림", "빙ㅇㅇ 회사의 아이스크림. (HP + 15)", 3000, 20)
몬스터에너지 = 아이템("몬스터 에너지", "마시면 눈이 번쩍 뜨일 것만 같다. (HP + 30)", 5000, 30)
즉석떡볶이 = 아이템("즉석 떡볶이", "즉석 떡볶이라 써져 있지만, 그냥 양념 묻은 떡이다. (HP + 35)", 5000, 35)
삼각김밥 = 아이템("삼각 김밥", "요즘 유행하는 맛이다. 마라탕후루 맛 삼각김밥... (HP + 20)", 6000, 20)
술 = 아이템("술", "굳이 마시고 싶진 않다. (HP + 10)", 2000, 10)
매운닭발 = 아이템("매운 닭발", "쓸데 없이 비싸다... (HP + 60)", 15000, 60)
하겐다즈 = 아이템("하겐다즈", "이걸 사면 지갑이 텅 빌 것이다. (HP + 100)", 20000, 100)

#게임종료 = 아이템("게임 종료", "이 아이템을 사용하면 게임이 종료된다.", 99999, 0)

아이템리스트 = [껌, 초코바, 아이스크림, 몬스터에너지, 즉석떡볶이, 삼각김밥, 술, 매운닭발, 하겐다즈]

def 체력바(최대체력, 현재체력):

    비율 = 현재체력 / 최대체력
    체력바길이 = 10

    채운길이 = int(체력바길이 * 비율)
    빈칸길이 = 체력바길이 - 채운길이

    체력바 = "[" + "■" * 채운길이 + "□" * 빈칸길이 + "]"
    return 체력바

def 전투(플레이어, 몹):

    p(f"  {r.choice(탐색메시지)}, ")
    p(f"{이(몹.이름)} {r.choice(몹조우메시지)}\n\n")

    while 플레이어.hp > 0 and 몹.hp > 0:
        
        몹스킬 = r.choice(몹.스킬들)

        # 플레이어 턴
        p(f"  {플레이어.이름}의 HP: {플레이어.hp} {체력바(플레이어.최대hp, 플레이어.hp)} | {몹.이름}의 HP: {몹.hp} {체력바(몹.최대hp, 몹.hp)}\n")
        p(f"  {은(몹.이름)} {을(몹스킬['이름'])} {r.choice(스킬준비메시지)}\n")
        p()

        while True:
            행동 = input("  1. 공격  2. 방어  3. 아이템 : ")
            sys.stdout.write("\n")

            if 행동 == '1': #공격
                플레이어.공격(몹)
                break

            elif 행동 == '2': #방어
                플레이어.방어()
                break

            elif 행동 == '3': #아이템
                if 플레이어.인벤토리:
                    while True:
                        for idx, 아이템 in enumerate(플레이어.인벤토리, 1):
                            p(f"{idx}. {아이템.이름} - {아이템.설명}\n")
                        선택 = int(input("  사용할 아이템 : ")) - 1
                        sys.stdout.write("\n")
                        try:
                            플레이어.아이템_사용(플레이어.인벤토리[선택])
                        except:
                            p(선택에러메시지)
                            continue
                        else:
                            break
                    break
                else:
                    p("  인벤토리에 아이템이 없다.\n\n")
                    continue
            else:
                p(선택에러메시지)
                continue

        if 몹.hp <= 0:
            p(f"  {을(몹.이름)} {r.choice(승리메시지)}\n")
            획득골드 = 몹.골드
            플레이어.골드 += 획득골드
            p(f"  기절한 {몹.이름}에게서 {획득골드}G를 {r.choice(골드획득메시지)} 현재 골드: {플레이어.골드}G\n\n")
            몹.hp = 몹.최대hp
            break

        # 몹 턴
        if 행동 != '2':                         
            몹.스킬_사용(플레이어, 몹스킬)
        else:
            p(f"  {몹.이름}의 {몹스킬['이름']}!\n")
            p(f"  {r.choice(방어성공메시지)}\n\n")

        if 플레이어.hp <= 0:
            p(f"{이(플레이어.이름)} {r.choice(사망메시지)}\n")
            break


def 상점(플레이어):
    p(f"{r.choice(상점발견메시지)}\n")
    확인 = input("1. 확인한다.  2. 지나친다. : ")
    sys.stdout.write("\n")
    if 확인 == '1':
        랜덤아이템 = r.choice(아이템리스트)
        while True:
            p(f"여기선 {을(랜덤아이템.이름)} 팔고 있다.\n")
            p(f"아이템 설명: {랜덤아이템.설명}\n\n")
            p(f"{을(랜덤아이템.이름)} {랜덤아이템.가격}G에 구입할까? (현재 골드: {플레이어.골드}G)\n")
            선택 = input("1. 구입한다.  2. 구입하지 않는다. : ")
            sys.stdout.write("\n")
            if 선택 == '1':
                if 플레이어.골드 >= 랜덤아이템.가격:
                    플레이어.골드 -= 랜덤아이템.가격
                    플레이어.인벤토리.append(랜덤아이템)
                    p(f"{을(랜덤아이템.이름)} 구입했다! 남은 골드: {플레이어.골드}G\n\n")
                    break
                else:
                    p("골드가 부족하다.\n")
                    break
            elif 선택 == '2':
                p("살 물건이 없다.\n\n")
                break
            else:
                p(선택에러메시지)


def 기타_이벤트(플레이어):
    이벤트 = r.randint(0, 12)
    if 이벤트 == 1:
        p("어떤 남자와 부딪혔다.\n")
        p("어라? 내 돈이 어디로 갔지?  (현재 골드: 0G)\n\n")
        플레이어.골드 = 0
    elif 이벤트 == 2:
        p("경사가 매우 심하다...\n\n")
    elif 이벤트 == 3:
        p("경사로를 걷다 넘어졌다.\n")
        p("다행히 큰 부상은 없다.\n\n")
    elif 이벤트 == 4:
        p("경사로를 걷다 넘어졌다.\n")
        p("다리를 접질렀다...  (HP-5)\n\n")
        플레이어.hp -= 5
    elif 이벤트 == 5:
        p("아싸! 오백원을 주웠다.  (+500G)\n\n")
        플레이어.골드 += 500
    elif 이벤트 == 6:
        p("이게 웬 횡재야! 천원을 주웠다!  (+1000G)\n\n")
        플레이어.골드 += 1000
    elif 이벤트 == 7:
        p("주위에서 수상한 시선이 느껴진다...\n\n")
    elif 이벤트 == 8:
        p("좁은 길을 걷다 천장에 머리를 박았다...  (HP-5)\n\n")
        플레이어.hp -= 5
    elif 이벤트 == 9:
        p("만원을 주웠다!!")
        p("  아닌가...?")
        p("\n자세히 보니...")
        p("\n만원처럼 보이도록 접어 놓은 전단지였다...\n\n")
    elif 이벤트 == 10:
        p("편안해 보이는 안마 의자를 발견했다.\n")
        p("안마 의자에서, 잠깐 휴식했다. (HP+10)\n\n")
        플레이어.hp += 10
    elif 이벤트 == 11:
        p("외국인이 나에게 말을 걸었다.\n")
        p("둘다 영어를 못해서, 그냥 지나쳤다.\n\n")
    elif 이벤트 == 12:
        p("길을 걷던 중,")
        p("  잼민이가 나타났다!\n\n")
        p("자세히 보니, 그냥 잼민이가 그려진 대형 팜플렛이다...\n\n")
    else:
        p("아무 일도 일어나지 않았다.\n\n")
        


def 게임_시작():
    global 게임속도

    게임속도 = 1.5
    for i in 게임시작메시지:
        p(i)

    이름 = input("이름을 입력하세요: ")
    sys.stdout.write("\n")
    게임속도 = 1

    while True:
        플레이어_캐릭터 = 플레이어(이름)
        플레이어_캐릭터.hp == 플레이어_캐릭터.최대hp
        p("게임 시작!\n\n")

        남은거리 = 1000

        while 남은거리 > 0 and 플레이어_캐릭터.hp > 0:
            if 남은거리 == 1000:
                길 = "오렌지길"
                p("\033[38;5;172m" + "오렌지길에 들어왔다.\n")
            elif 남은거리 == 750:
                길 = "초록길"
                p("\033[38;5;106m" + "초록길에 들어왔다.\n")
            elif 남은거리 == 500:
                길 = "빨강길"
                p("\033[38;5;124m" + "빨강길에 들어왔다.\n")
            elif 남은거리 == 200:
                p("\033[0m" + "출구가 얼마 남지 않았다!\n" + "\033[38;5;124m")
            
            p("\n탐색 중...")
            p("  남은 거리: ")
            p(f"{남은거리}m\n\n")

            이벤트 = r.choices(['전투', '상점', '기타'], weights=[플레이어_캐릭터.전투가중치, 1, 2])[0]

            if 이벤트 == '전투':
                랜덤몹 = r.choice(몹리스트.get(길))
                랜덤몹.hp == 랜덤몹.최대hp
                게임속도 = 0.6
                전투(플레이어_캐릭터, 랜덤몹)
                게임속도 = 1
                플레이어_캐릭터.전투가중치 = 0
            
            elif 이벤트 == '상점':
                상점(플레이어_캐릭터)
                플레이어_캐릭터.전투가중치 += 4
            
            elif 이벤트 == '기타':
                기타_이벤트(플레이어_캐릭터)
                플레이어_캐릭터.전투가중치 += 2

            남은거리 -= 50

        if 플레이어_캐릭터.hp > 0:
            게임속도 = 1
            for i in 엔딩메시지:
                p(i)

            게임속도 = 1
            p("다시 플레이하시겠습니까?\n")
            확인 = input("1. 예 2. 아니오 = ")
            sys.stdout.write("\n")
            if 확인 == "2":
                break
            else:
                del 플레이어_캐릭터
                continue

        else:
            p("게임 오버!\n")
            p("다시 플레이하시겠습니까?\n")
            확인 = input("1. 예 2. 아니오 = ")
            sys.stdout.write("\n")
            if 확인 == "2":
                break
            else:
                del 플레이어_캐릭터
                continue

def 타이틀():
    p(타이틀메시지)
    while 1:
        시작 = input("1. 게임 시작  2. 게임 설명  3. 제작자 정보  4. 게임 종료 : ")
        sys.stdout.write("\n")
        if 시작 == '1':
            게임_시작()
            break
        elif 시작 == '2':
            p(게임설명메시지)
        elif 시작 == '3':
            p(제작자정보메시지)
        elif 시작 == '4':
            exit()
        else:
            p(선택에러메시지)

while 1:
    타이틀()